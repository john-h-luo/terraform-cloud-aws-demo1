# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

# variables:
#   bkstrgrg: 'luotech-sa'
#   bkstrg: 'luotechsa'
#   bkcontainer: 'tf-backend'
#   bkstrgkey: 'devpipeline.terraform.tfstate'

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
        - task: TerraformInstaller@1
          displayName: tfinstall
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV4@4
          displayName: firstInit
          inputs:
            provider: 'aws'
            command: 'init'
            backendServiceAWS: 'aws'
            backendAWSBucketName: 'luotech-terraform-aws-us-west-2'
            backendAWSKey: 'backend.tfstate'
        - task: TerraformTaskV4@4
          displayName: validate
          inputs:
            provider: 'aws'
            command: 'validate'
  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
        - task: TerraformInstaller@1
          displayName: tfinstall
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV4@4
          displayName: initBeforePlan
          inputs:
            provider: 'aws'
            command: 'init'
            backendServiceAWS: 'aws'
            backendAWSBucketName: 'luotech-terraform-aws-us-west-2'
            backendAWSKey: 'backend.tfstate'
        - task: TerraformTaskV4@4
          inputs:
            provider: 'aws'
            command: 'plan'
            environmentServiceNameAWS: 'aws'
        - task: TerraformTaskV4@4
          displayName: apply
          inputs:
            provider: 'aws'
            command: 'apply'
            environmentServiceNameAWS: 'aws'
        - task: TerraformTaskV4@4
          inputs:
            provider: 'aws'
            command: 'destroy'
            environmentServiceNameAWS: 'aws'
